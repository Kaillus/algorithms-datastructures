{"version":3,"sources":["Components/CodeAnalysis/atom-one-light.js","Components/CodeAnalysis/CodeAnalysisModule.js"],"names":["SyntaxHighlighter","registerLanguage","cpp","useStyles","makeStyles","theme","root","code","fontSize","textAlign","display","boxSizing","position","tooltip","text","color","backgroundColor","boxShadow","CodeAnalysisModule","unit","classes","useState","setCode","_path","useEffect","path","a","fetch","then","r","split","filter","includes","loadFile","className","map","item","Tooltip","title","interactive","placement","language","style","docco"],"mappings":"yLAAe,GACb,KAAQ,CACN,UAAa,QAEf,eAAgB,CACd,MAAS,UACT,UAAa,UAEf,aAAc,CACZ,MAAS,UACT,UAAa,UAEf,cAAe,CACb,MAAS,WAEX,eAAgB,CACd,MAAS,WAEX,eAAgB,CACd,MAAS,WAEX,eAAgB,CACd,MAAS,WAEX,YAAa,CACX,MAAS,WAEX,oBAAqB,CACnB,MAAS,WAEX,gBAAiB,CACf,MAAS,WAEX,aAAc,CACZ,MAAS,WAEX,eAAgB,CACd,MAAS,WAEX,cAAe,CACb,MAAS,WAEX,cAAe,CACb,MAAS,WAEX,gBAAiB,CACf,MAAS,WAEX,iBAAkB,CAChB,MAAS,WAEX,mBAAoB,CAClB,MAAS,WAEX,gBAAiB,CACf,MAAS,WAEX,yBAA0B,CACxB,MAAS,WAEX,YAAa,CACX,MAAS,WAEX,gBAAiB,CACf,MAAS,WAEX,yBAA0B,CACxB,MAAS,WAEX,YAAa,CACX,MAAS,WAEX,sBAAuB,CACrB,MAAS,WAEX,qBAAsB,CACpB,MAAS,WAEX,uBAAwB,CACtB,MAAS,WAEX,cAAe,CACb,MAAS,WAEX,cAAe,CACb,MAAS,WAEX,cAAe,CACb,MAAS,WAEX,YAAa,CACX,MAAS,UACT,eAAkB,aAEpB,YAAa,CACX,MAAS,WAEX,mBAAoB,CAClB,MAAS,WAEX,aAAc,CACZ,MAAS,WAEX,gBAAiB,CACf,UAAa,UAEf,cAAe,CACb,WAAc,S,iBCnGlBA,IAAkBC,iBAAiB,MAAOC,KAE1C,IAAMC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,GAENC,KAAM,CACFC,SAAU,kBACVC,UAAW,iBACXC,QAAS,yBACTC,UAAW,uBACXC,SAAU,YAEdC,QAAS,CACLD,SAAU,YAEdE,KAAM,CACFJ,QAAS,QACT,UAAW,CACPK,MAAO,UACPC,gBAAiB,wBACjBC,UAAW,2CA4CRC,UAvCf,SAA4BC,GACxB,IAAMC,EAAUjB,IADc,EAENkB,mBAAS,IAFH,mBAEvBd,EAFuB,KAEjBe,EAFiB,KAGxBC,EAAQJ,EAAKA,KAcnB,OAZAK,qBAAU,WAAM,4CACZ,WAAwBC,GAAxB,SAAAC,EAAA,sEACiBC,MAAMF,GACdG,MAAK,SAACC,GAAD,OAAOA,EAAEf,UACdc,MAAK,SAACC,GAAD,OAAOA,EAAEC,MAAM,SACpBF,MAAK,SAACC,GAAD,OAAOA,EAAEE,QAAO,SAAAL,GAAC,OAAKA,EAAEM,SAAS,cACtCJ,MAAK,SAACC,GAAD,OAAOP,EAAQO,MAL7B,oFADY,uBAAC,SAAD,2BASZI,CAASV,MAIT,yBAAKW,UAAWd,EAAQb,MACnBA,EAAK4B,KAAI,SAAAC,GACT,OAAKA,EAAKJ,SAAS,MAAmB,QAATI,EAWtB,yBAAKF,UAAWd,EAAQN,MAAOsB,GAT/B,kBAACC,EAAA,EAAD,CAASC,MAAOF,EAAMG,aAAW,EAACL,UAAWd,EAAQP,QAAS2B,UAAU,SACpE,yBAAKN,UAAWd,EAAQN,MACpB,kBAAC,IAAD,CAAmB2B,SAAS,MAAMC,MAAOC,GACpCP","file":"static/js/15.1b713d84.chunk.js","sourcesContent":["export default {\n  \"hljs\": {\n    \"overflowX\": \"auto\",\n  },\n  \"hljs-comment\": {\n    \"color\": \"#a0a1a7\",\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-quote\": {\n    \"color\": \"#a0a1a7\",\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-doctag\": {\n    \"color\": \"#0000aa\"\n  },\n  \"hljs-keyword\": {\n    \"color\": \"#0000aa\"\n  },\n  \"hljs-formula\": {\n    \"color\": \"#0000aa\"\n  },\n  \"hljs-section\": {\n    \"color\": \"#e45649\"\n  },\n  \"hljs-name\": {\n    \"color\": \"#e45649\"\n  },\n  \"hljs-selector-tag\": {\n    \"color\": \"#e45649\"\n  },\n  \"hljs-deletion\": {\n    \"color\": \"#e45649\"\n  },\n  \"hljs-subst\": {\n    \"color\": \"#e45649\"\n  },\n  \"hljs-literal\": {\n    \"color\": \"#0184bb\"\n  },\n  \"hljs-string\": {\n    \"color\": \"#50a14f\"\n  },\n  \"hljs-regexp\": {\n    \"color\": \"#50a14f\"\n  },\n  \"hljs-addition\": {\n    \"color\": \"#50a14f\"\n  },\n  \"hljs-attribute\": {\n    \"color\": \"#50a14f\"\n  },\n  \"hljs-meta-string\": {\n    \"color\": \"#50a14f\"\n  },\n  \"hljs-built_in\": {\n    \"color\": \"#00aaaa\"\n  },\n  \"hljs-class .hljs-title\": {\n    \"color\": \"#00aaaa\"\n  },\n  \"hljs-attr\": {\n    \"color\": \"#00aaaa\"\n  },\n  \"hljs-variable\": {\n    \"color\": \"#00aaaa\"\n  },\n  \"hljs-template-variable\": {\n    \"color\": \"#00aaaa\"\n  },\n  \"hljs-type\": {\n    \"color\": \"#00aaaa\"\n  },\n  \"hljs-selector-class\": {\n    \"color\": \"#00aaaa\"\n  },\n  \"hljs-selector-attr\": {\n    \"color\": \"#00aaaa\"\n  },\n  \"hljs-selector-pseudo\": {\n    \"color\": \"#00aaaa\"\n  },\n  \"hljs-number\": {\n    \"color\": \"#00aaaa\"\n  },\n  \"hljs-symbol\": {\n    \"color\": \"#00bb00\"\n  },\n  \"hljs-bullet\": {\n    \"color\": \"#00bb00\"\n  },\n  \"hljs-link\": {\n    \"color\": \"#00bb00\",\n    \"textDecoration\": \"underline\"\n  },\n  \"hljs-meta\": {\n    \"color\": \"#00bb00\"\n  },\n  \"hljs-selector-id\": {\n    \"color\": \"#00bb00\"\n  },\n  \"hljs-title\": {\n    \"color\": \"#00bb00\"\n  },\n  \"hljs-emphasis\": {\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-strong\": {\n    \"fontWeight\": \"bold\"\n  }\n};","import React, {useEffect, useState} from 'react';\r\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport cpp from 'react-syntax-highlighter/dist/esm/languages/hljs/cpp';\r\n//import docco from 'react-syntax-highlighter/dist/esm/styles/hljs/atom-one-light';\r\nimport docco from './atom-one-light';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nSyntaxHighlighter.registerLanguage('cpp', cpp);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n    },\r\n    code: {\r\n        fontSize: \"calc(4px + 1vw)\",\r\n        textAlign: \"left!important\",\r\n        display: \"inline-block!important\",\r\n        boxSizing: \"border-box!important\",\r\n        position: \"relative\",\r\n    },\r\n    tooltip: {\r\n        position: 'relative',\r\n    },\r\n    text: {\r\n        display: 'table',\r\n        '&:hover': {\r\n            color: '#eeeeee',\r\n            backgroundColor: 'rgba(00, 00, 00, 0.6)',\r\n            boxShadow: \"0 0 10px 3px rgba(11, 11, 11, 0.6)\",\r\n        },\r\n    },\r\n}));\r\n\r\nfunction CodeAnalysisModule(unit) {\r\n    const classes = useStyles();\r\n    const [code, setCode] = useState([]);\r\n    const _path = unit.unit;\r\n\r\n    useEffect(() => {\r\n        async function loadFile(path) {\r\n            return await fetch(path)\r\n                .then((r) => r.text())\r\n                .then((r) => r.split(\"\\n\"))\r\n                .then((r) => r.filter(a => !a.includes(\"////\")))\r\n                .then((r) => setCode(r));\r\n        }\r\n\r\n        loadFile(_path);\r\n    });\r\n\r\n    return (\r\n        <div className={classes.code}>\r\n            {code.map(item => \r\n            {if (!item.includes(\"}\") || (!item === \"\\n\")) {\r\n                return (\r\n                    <Tooltip title={item} interactive className={classes.tooltip} placement=\"right\">\r\n                        <pre className={classes.text}>\r\n                            <SyntaxHighlighter language=\"cpp\" style={docco}>\r\n                                {item}\r\n                            </SyntaxHighlighter>\r\n                        </pre>\r\n                    </Tooltip>)\r\n            } else {\r\n                return (\r\n                    <pre className={classes.text}>{item}</pre>\r\n                )\r\n            }\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CodeAnalysisModule;\r\n"],"sourceRoot":""}