(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[17],{140:function(e,t,n){"use strict";var a=n(2),i=n(1),r=n(0),s=n.n(r),o=(n(4),n(3)),c=n(5),l=[0,1,2,3,4,5,6,7,8,9,10],d=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12];function u(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=parseFloat(e);return"".concat(n/t).concat(String(e).replace(String(n),"")||"px")}var p=s.a.forwardRef((function(e,t){var n=e.alignContent,r=void 0===n?"stretch":n,c=e.alignItems,l=void 0===c?"stretch":c,d=e.classes,u=e.className,p=e.component,m=void 0===p?"div":p,x=e.container,f=void 0!==x&&x,g=e.direction,h=void 0===g?"row":g,v=e.item,b=void 0!==v&&v,w=e.justify,y=void 0===w?"flex-start":w,j=e.lg,S=void 0!==j&&j,C=e.md,E=void 0!==C&&C,W=e.sm,k=void 0!==W&&W,O=e.spacing,z=void 0===O?0:O,I=e.wrap,G=void 0===I?"wrap":I,M=e.xl,N=void 0!==M&&M,P=e.xs,R=void 0!==P&&P,B=e.zeroMinWidth,D=void 0!==B&&B,T=Object(a.a)(e,["alignContent","alignItems","classes","className","component","container","direction","item","justify","lg","md","sm","spacing","wrap","xl","xs","zeroMinWidth"]),A=Object(o.a)(d.root,u,f&&[d.container,0!==z&&d["spacing-xs-".concat(String(z))]],b&&d.item,D&&d.zeroMinWidth,"row"!==h&&d["direction-xs-".concat(String(h))],"wrap"!==G&&d["wrap-xs-".concat(String(G))],"stretch"!==l&&d["align-items-xs-".concat(String(l))],"stretch"!==r&&d["align-content-xs-".concat(String(r))],"flex-start"!==y&&d["justify-xs-".concat(String(y))],!1!==R&&d["grid-xs-".concat(String(R))],!1!==k&&d["grid-sm-".concat(String(k))],!1!==E&&d["grid-md-".concat(String(E))],!1!==S&&d["grid-lg-".concat(String(S))],!1!==N&&d["grid-xl-".concat(String(N))]);return s.a.createElement(m,Object(i.a)({className:A,ref:t},T))})),m=Object(c.a)((function(e){return Object(i.a)({root:{},container:{boxSizing:"border-box",display:"flex",flexWrap:"wrap",width:"100%"},item:{boxSizing:"border-box",margin:"0"},zeroMinWidth:{minWidth:0},"direction-xs-column":{flexDirection:"column"},"direction-xs-column-reverse":{flexDirection:"column-reverse"},"direction-xs-row-reverse":{flexDirection:"row-reverse"},"wrap-xs-nowrap":{flexWrap:"nowrap"},"wrap-xs-wrap-reverse":{flexWrap:"wrap-reverse"},"align-items-xs-center":{alignItems:"center"},"align-items-xs-flex-start":{alignItems:"flex-start"},"align-items-xs-flex-end":{alignItems:"flex-end"},"align-items-xs-baseline":{alignItems:"baseline"},"align-content-xs-center":{alignContent:"center"},"align-content-xs-flex-start":{alignContent:"flex-start"},"align-content-xs-flex-end":{alignContent:"flex-end"},"align-content-xs-space-between":{alignContent:"space-between"},"align-content-xs-space-around":{alignContent:"space-around"},"justify-xs-center":{justifyContent:"center"},"justify-xs-flex-end":{justifyContent:"flex-end"},"justify-xs-space-between":{justifyContent:"space-between"},"justify-xs-space-around":{justifyContent:"space-around"},"justify-xs-space-evenly":{justifyContent:"space-evenly"}},function(e,t){var n={};return l.forEach((function(a){var i=e.spacing(a);0!==i&&(n["spacing-".concat(t,"-").concat(a)]={margin:"-".concat(u(i,2)),width:"calc(100% + ".concat(u(i),")"),"& > $item":{padding:u(i,2)}})})),n}(e,"xs"),{},e.breakpoints.keys.reduce((function(t,n){return function(e,t,n){var a={};d.forEach((function(e){var t="grid-".concat(n,"-").concat(e);if(!0!==e)if("auto"!==e){var i="".concat(Math.round(e/12*1e8)/1e6,"%");a[t]={flexBasis:i,flexGrow:0,maxWidth:i}}else a[t]={flexBasis:"auto",flexGrow:0,maxWidth:"none"};else a[t]={flexBasis:0,flexGrow:1,maxWidth:"100%"}})),"xs"===n?Object(i.a)(e,a):e[t.breakpoints.up(n)]=a}(t,e,n),t}),{}))}),{name:"MuiGrid"})(p);t.a=m},209:function(e,t,n){"use strict";n.r(t);var a=n(0),i=n.n(a),r=n(79),s=n(127),o=n(140),c=n(56),l=n(57),d=Object(a.lazy)((function(){return Promise.all([n.e(0),n.e(2),n.e(3)]).then(n.bind(null,137))})),u=Object(a.lazy)((function(){return Promise.all([n.e(0),n.e(4)]).then(n.bind(null,136))})),p=Object(a.lazy)((function(){return Promise.all([n.e(1),n.e(6)]).then(n.bind(null,151))})),m=[c,l],x=Object(r.a)((function(e){return{root:{flexGrow:1},paper:{padding:e.spacing(1),maxWidth:"50vw"},container:{marginLeft:"10px",marginRight:"10px"}}}));t.default=function(e){var t,n,a,r=x(),c=e.id,l=(t=e.useGitPath,n=c,a="search",t?"https://raw.githubusercontent.com/Kaillus/algorithms-datastructures/master/public/Resources/CodeAnalysis/data-structures/"+n+"/"+a+".cpp":"../../Resources/CodeAnalysis/data-structures/"+n+"/"+a+".cpp");return i.a.createElement("div",null,i.a.createElement("span",null,"Linked lists are usually implemented using some sort of array. The structure itself consists of nodes that contain data and pointers to point to other nodes. The beginning of the list (the 'head') is saved in the higher-order linked list struct - optionally the end of the list (the 'tail') can be saved as well. The linked list can be circular (the tail node points to the head node) and/or doubly-linked (each node points to the node before it as well as after it in the list). In the following code snippets, unless stated otherwise the linked lists are non-circular."),i.a.createElement(s.a,{elevation:3,className:r.container},i.a.createElement(o.a,{container:!0,spacing:0,direction:"row",alignItems:"center"},i.a.createElement(o.a,{item:!0,xs:12,sm:6},i.a.createElement(s.a,{elevation:0,className:r.paper},i.a.createElement(d,{unit:l,id:c}))),i.a.createElement(o.a,{item:!0,xs:12,sm:6},i.a.createElement(s.a,{elevation:0,className:r.paper},i.a.createElement(u,{unit:l,id:c}))))),i.a.createElement(p,{unit:m,id:c}))}}}]);
//# sourceMappingURL=17.a1f85177.chunk.js.map