{"version":3,"sources":["Components/CodeAnalysis/CodeCommentModule.js"],"names":["useStyles","makeStyles","theme","root","code","fontSize","overflowWrap","wordBreak","whiteSpace","maxWidth","boxSizing","tooltip","position","text","active","color","backgroundColor","boxShadow","CodeCommentModule","unit","classes","useState","setCode","_path","_id","id","mounted","useRef","useEffect","path","a","fetch","then","r","split","filter","includes","current","loadFile","className","name","style","height","overflow","paddingBottom","map","item","index","trim","toString","key","join","concat"],"mappings":"gMAMMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,GAENC,KAAM,CACFC,SAAU,kBACVC,aAAc,aACdC,UAAW,SACXC,WAAY,QACZC,SAAU,OACVC,UAAW,wBAEfC,QAAS,CACLC,SAAU,YAEdC,KAAM,GAENC,OAAQ,CACJC,MAAO,UACPC,gBAAiB,wBACjBC,UAAW,0CAiDJC,UA7Cf,SAA2BC,GACvB,IAAMC,EAAUpB,IADa,EAELqB,mBAAS,IAFJ,mBAEtBjB,EAFsB,KAEhBkB,EAFgB,KAGvBC,EAAQJ,EAAKA,KACbK,EAAML,EAAKM,GACXC,EAAUC,kBAAO,GAiBvB,OAfAC,qBAAU,WAAM,4CACZ,WAAwBC,GAAxB,SAAAC,EAAA,sEACiBC,MAAMF,GACdG,MAAK,SAACC,GAAD,OAAOA,EAAEpB,UACdmB,MAAK,SAACC,GAAD,OAAOA,EAAEC,MAAM,SACpBF,MAAK,SAACC,GAAD,OAAOA,EAAEE,QAAO,SAAAL,GAAC,OAAIA,EAAEM,SAAS,YACrCJ,MAAK,SAACC,GAAD,OAAOX,EAAQW,MAL7B,oFADY,sBASPP,EAAQW,WATA,SAAD,2BAURC,CAASf,GACTG,EAAQW,SAAU,MAKtB,yBAAKE,UAAWnB,EAAQhB,MACpB,kBAAC,UAAD,CAASoC,KAAK,WAAWD,UAAU,SAASd,GAAID,EAAKiB,MAAO,CACxD7B,SAAU,WACV8B,OAAQ,QACRC,SAAU,SACVC,cAAe,UAEnB,kBAAC,IAAD,MACKxC,EAAKyC,KAAI,SAACC,EAAMC,GACb,GAAoB,SAAhBD,EAAKE,OACT,OAAQ,kBAAC,UAAD,CAASR,KAAMO,EAAME,WAAYC,IAAKH,GAEtC,uBAAGG,IAAKH,GAAQD,EAAKZ,MAAM,OAAOiB,KAAK,IAAIjB,MAAM,OAAOiB,KAAK,IAAIC,OAAO,KAAM,OAC9E,kBAAC,IAAD","file":"static/js/3.b4d95a1c.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nimport { Element } from 'react-scroll'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n    },\r\n    code: {\r\n        fontSize: \"calc(2px + 1vw)\",\r\n        overflowWrap: \"break-word\",\r\n        wordBreak: \"normal\",\r\n        whiteSpace: \"unset\",\r\n        maxWidth: \"50vw\",\r\n        boxSizing: \"border-box!important\",\r\n    },\r\n    tooltip: {\r\n        position: 'relative',\r\n    },\r\n    text: {\r\n    },\r\n    active: {\r\n        color: '#eeeeee',\r\n        backgroundColor: 'rgba(00, 00, 00, 0.6)',\r\n        boxShadow: \"0 0 10px 3px rgba(11, 11, 11, 0.6)\",\r\n    },\r\n}));\r\n\r\nfunction CodeCommentModule(unit) {\r\n    const classes = useStyles();\r\n    const [code, setCode] = useState([]);\r\n    const _path = unit.unit;\r\n    const _id = unit.id;\r\n    const mounted = useRef(false);\r\n\r\n    useEffect(() => {\r\n        async function loadFile(path) {\r\n            return await fetch(path)\r\n                .then((r) => r.text())\r\n                .then((r) => r.split(\"\\n\"))\r\n                .then((r) => r.filter(a => a.includes(\"/*\")))\r\n                .then((r) => setCode(r));\r\n        }\r\n\r\n        if (!mounted.current) {\r\n            loadFile(_path);\r\n            mounted.current = true;\r\n        }\r\n    });\r\n    \r\n    return (\r\n        <div className={classes.code}>\r\n            <Element name=\"comments\" className=\"active\" id={_id} style={{\r\n                position: 'relative',\r\n                height: '300px',\r\n                overflow: 'scroll',\r\n                paddingBottom: '300px',\r\n            }}>\r\n            <Divider />\r\n                {code.map((item, index) => {\r\n                    if (item.trim() !== \"/**/\") {\r\n                    return (<Element name={index.toString()} key={index}>\r\n                        {/* <Link activeClass=\"active\" to={index} spy={true} smooth={true} duration={250} containerId={_id}> */}\r\n                            <p key={index}>{item.split(\"/* \").join(\"\").split(\" */\").join(\"\").concat(\"\\n\", \"\\n\")}</p>\r\n                            <Divider />\r\n                        {/* </Link> */}\r\n                    </Element>)\r\n                    }})}\r\n            </Element>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CodeCommentModule;"],"sourceRoot":""}