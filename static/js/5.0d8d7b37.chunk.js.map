{"version":3,"sources":["Components/CodeAnalysis/AlgRuntimeModule.js"],"names":["useStyles","makeStyles","theme","root","code","fontSize","display","boxSizing","wordBreak","tooltip","position","text","color","backgroundColor","boxShadow","cursor","active","table","marginTop","marginBottom","marginLeft","marginRight","width","minWidth","tableNoBorderRight","fontWeight","borderTop","borderBottom","borderLeft","paddingRight","tableNoBorderLeft","borderRight","paddingLeft","tableBorder","zero","one","two","three","four","five","AlgRuntimeModule","unit","classes","useState","data","_solo","id","solo","rToC","createData","name","desc","rc_avg","rc_avg_rank","rc_avg_desc","rc_worst","rc_worst_rank","rc_worst_desc","sc_worst","sc_worst_rank","sc_worst_desc","console","log","rows","push","runtimeComplexity","average","runtime","rank","worst","spaceComplexity","map","alg","component","Paper","className","square","aria-label","align","row","key","title","interactive","arrow","scope"],"mappings":"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","file":"static/js/5.0d8d7b37.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Paper, Tooltip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n    },\r\n    code: {\r\n        fontSize: \"calc(3px + 1vw)\",\r\n        display: \"inline-block!important\",\r\n        boxSizing: \"border-box!important\",\r\n        wordBreak: \"break-all\",\r\n    },\r\n    tooltip: {\r\n        position: 'relative',\r\n    },\r\n    text: {\r\n        display: 'table',\r\n        wordBreak: \"break-all\",\r\n        '&:hover': {\r\n            color: '#eeeeee',\r\n            backgroundColor: 'rgba(00, 00, 00, 0.6)',\r\n            boxShadow: \"0 0 10px 3px rgba(11, 11, 11, 0.6)\",\r\n        },\r\n        cursor: 'pointer',\r\n    },\r\n    active: {\r\n        color: '#eeeeee',\r\n        backgroundColor: 'rgba(00, 00, 00, 0.6)',\r\n        boxShadow: \"0 0 10px 3px rgba(11, 11, 11, 0.6)\",\r\n    },\r\n    table: {\r\n        marginTop: '5px',\r\n        marginBottom: '5px',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        width: '60%',\r\n        minWidth: '650px',\r\n        //backgroundColor: 'rgba(00, 00, 00, 0)',\r\n    },\r\n    tableNoBorderRight: {\r\n        backgroundColor: 'rgba(00, 00, 00, 0.2)',\r\n        fontWeight: '500',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        paddingRight: '2px',\r\n    },\r\n    tableNoBorderLeft: {\r\n        backgroundColor: 'rgba(00, 00, 00, 0.2)',\r\n        fontWeight: '500',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n        paddingLeft: '2px',\r\n    },\r\n    tableBorder: {\r\n    },\r\n    zero: {\r\n        backgroundColor: 'rgba(00, 00, 00, 0.2)',\r\n        fontWeight: '500',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n    },\r\n    one: {\r\n        backgroundColor: 'rgba(00, 150, 00, 0.6)',\r\n        color: '#004000',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n    },\r\n    two: {\r\n        backgroundColor: 'rgba(130, 240, 10, 0.6)',\r\n        color: '#004000',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n    },\r\n    three: {\r\n        backgroundColor: 'rgba(255,255,10, 0.6)',\r\n        color: '#804000',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n    },\r\n    four: {\r\n        backgroundColor: 'rgba(255,100,0, 0.6)',\r\n        color: '#804000',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n    },\r\n    five: {\r\n        backgroundColor: 'rgba(255,0,0, 0.6)',\r\n        color: '#800000',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n    }\r\n}));\r\n\r\nfunction AlgRuntimeModule(unit) {\r\n    const classes = useStyles();\r\n    const [hover, setHoverIndex] = useState(false);\r\n    const data = unit.unit;\r\n    const _id = unit.id;\r\n    const _solo = unit.solo;\r\n    const rToC = [ //rankToColour\r\n        classes.zero, // not used for runtime, outer cells\r\n        classes.one, // constant\r\n        classes.two, // logn\r\n        classes.three, // n\r\n        classes.four, // n log n\r\n        classes.five, // n^2\r\n    ];\r\n    console.log(unit.unit);\r\n    //const mounted = useRef(false);\r\n\r\n    // useEffect(() => {\r\n    //     async function loadFile(path) {\r\n    //         return await fetch(path)\r\n    //             .then((r) => r.text())\r\n    //             .then((r) => r.split(\"\\n\"))\r\n    //             .then((r) => r.filter(a => !a.includes(\"/* \") && !a.includes(\"/**/\")))\r\n    //             .then((r) => setCode(r));\r\n    //     }\r\n\r\n    //     if (!mounted.current) {\r\n    //         loadFile(_analysis);\r\n    //         mounted.current = true;\r\n    //     }\r\n    // });\r\n\r\n    function createData(name, desc, rc_avg, rc_avg_rank, rc_avg_desc, rc_worst, rc_worst_rank, rc_worst_desc, sc_worst, sc_worst_rank, sc_worst_desc) {\r\n        return { name, desc, rc_avg, rc_avg_rank, rc_avg_desc, rc_worst, rc_worst_rank, rc_worst_desc, sc_worst, sc_worst_rank, sc_worst_desc };\r\n    }\r\n\r\n    var rows = [];\r\n\r\n    if (_solo) {\r\n        rows.push( createData(data.name,\r\n                data.desc,\r\n                data.runtimeComplexity.average.runtime,\r\n                data.runtimeComplexity.average.rank,\r\n                data.runtimeComplexity.average.desc,\r\n                data.runtimeComplexity.worst.runtime,\r\n                data.runtimeComplexity.worst.rank,\r\n                data.runtimeComplexity.worst.desc,\r\n                data.spaceComplexity.worst.runtime,\r\n                data.spaceComplexity.worst.rank,\r\n                data.spaceComplexity.worst.desc)\r\n        );\r\n    } else {\r\n            data.map( alg => {rows.push(createData(alg.name,\r\n                alg.desc,\r\n                alg.runtimeComplexity.average.runtime,\r\n                alg.runtimeComplexity.average.rank,\r\n                alg.runtimeComplexity.average.desc,\r\n                alg.runtimeComplexity.worst.runtime,\r\n                alg.runtimeComplexity.worst.rank,\r\n                alg.runtimeComplexity.worst.desc,\r\n                alg.spaceComplexity.worst.runtime,\r\n                alg.spaceComplexity.worst.rank,\r\n                alg.spaceComplexity.worst.desc))});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer component={Paper} className={classes.table} square>\r\n            <Table aria-label=\"table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                    <TableCell className={classes.zero}></TableCell>\r\n                    <TableCell align=\"right\" className={classes.tableNoBorderRight}>Runtime</TableCell>\r\n                    <TableCell align=\"left\" className={classes.tableNoBorderLeft}>Complexity</TableCell>\r\n                    <TableCell align=\"center\" className={classes.zero}>Space Complexity</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell align=\"left\" className={classes.zero}>Algorithms</TableCell>\r\n                    <TableCell align=\"center\" className={classes.zero}>Average Case</TableCell>\r\n                    <TableCell align=\"center\" className={classes.zero}>Worst Case</TableCell>\r\n                    <TableCell align=\"center\" className={classes.zero}>Worst Case</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {rows.map(row => (\r\n                    <TableRow key={row.name}>\r\n                        <Tooltip title={row.desc} interactive arrow>\r\n                            <TableCell component=\"th\" scope=\"row\" className={classes.zero}>\r\n                                {row.name}\r\n                            </TableCell>\r\n                        </Tooltip>\r\n                        <Tooltip title={row.rc_avg_desc} interactive arrow>\r\n                            <TableCell align=\"center\" className={rToC[row.rc_avg_rank]}>{row.rc_avg}</TableCell>\r\n                        </Tooltip>\r\n                        <Tooltip title={row.rc_worst_desc} interactive arrow>\r\n                            <TableCell align=\"center\" className={rToC[row.rc_worst_rank]}>{row.rc_worst}</TableCell>\r\n                        </Tooltip>\r\n                        <Tooltip title={row.sc_worst_desc} interactive arrow>\r\n                            <TableCell align=\"center\" className={rToC[row.sc_worst_rank]}>{row.sc_worst}</TableCell>\r\n                        </Tooltip>\r\n                    </TableRow>\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlgRuntimeModule;"],"sourceRoot":""}