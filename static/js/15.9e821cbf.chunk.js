(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[15],{132:function(e,t,n){"use strict";n.r(t);var r=n(22),a=n(0),i=n.n(a),c=n(58),o=n(24),u=n(105),l=n(114),s=n.n(l),p=n(116),f=n(131),m=Object(c.a)((function(e){return{root:{},code:{fontSize:"calc(4px + 2vmin)",textAlign:"left!important",display:"inline-block!important",boxSizing:"border-box!important"},tooltip:{position:"relative"},text:{display:"table","&:hover":{color:"#eeeeee",backgroundColor:"rgba(00, 00, 00, 0.6)",boxShadow:"0 0 10px 3px rgba(00, 00, 00, 0.6)"}}}}));var b=function(e){var t=m(),n=(Object(o.a)(),Object(a.useState)([])),c=Object(r.a)(n,2),u=c[0],l=c[1],b=e.unit;return Object(a.useEffect)((function(){function e(){return(e=Object(p.a)(s.a.mark((function e(t){return s.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(t).then((function(e){return e.text()})).then((function(e){return e.split("\n")})).then((function(e){return e.filter((function(e){return!e.includes("////")}))})).then((function(e){return l(e)}));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}!function(t){e.apply(this,arguments)}(b)}),[b]),i.a.createElement("div",{className:t.code},u.map((function(e){return i.a.createElement(f.a,{title:e,interactive:!0,className:t.tooltip},i.a.createElement("pre",{className:t.text},e))})))},d=Object(c.a)((function(e){return{root:{},paper:{position:"relative",justifyContent:"center",alignItems:"center",width:"60%"}}}));t.default=function(e){var t=d(),n=(Object(o.a)(),i.a.useState(!1)),a=Object(r.a)(n,2);return a[0],a[1],i.a.createElement("div",null,i.a.createElement("h1",null,"Merge Sort is a divide-and-conquer algorithm"),i.a.createElement(u.a,{elevation:3,className:t.paper},i.a.createElement(b,{unit:"../../Resources/CodeAnalysis/algorithms/merge.cpp"})))}}}]);
//# sourceMappingURL=15.9e821cbf.chunk.js.map