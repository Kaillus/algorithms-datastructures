{"version":3,"sources":["Components/Module/algorithms/json lazy /^/.*$/ groupOptions: {} namespace object","Components/CodeAnalysis/DSRuntimeModule.js"],"names":["map","webpackAsyncContext","req","Promise","resolve","then","__webpack_require__","o","e","Error","code","id","t","keys","Object","module","exports","useStyles","makeStyles","theme","root","fontSize","display","boxSizing","wordBreak","tooltip","position","text","color","backgroundColor","boxShadow","cursor","active","table","marginTop","marginBottom","marginLeft","marginRight","width","minWidth","tableNoBorderRight","fontWeight","borderTop","borderBottom","borderLeft","paddingRight","tableNoBorderLeft","borderRight","paddingLeft","visuallyHidden","border","clip","height","margin","overflow","padding","top","icon","dropDownArrow","verticalAlign","zero","one","two","three","four","five","descendingComparator","a","b","orderBy","substring","length","rank","createData","query","name","desc","rc_avg_search","runtimeComplexity","average","search","rc_avg_ins","insertion","rc_avg_del","deletion","rc_worst_search","worst","rc_worst_ins","rc_worst_del","headCells","numeric","disablePadding","label","dependent","EnhancedTableHead","props","classes","order","onRequestSort","titleType","headCell","key","align","sortDirection","className","direction","onClick","property","event","IconComponent","ArrowDropDownIcon","str","concat","DSRuntimeModule","unit","useState","_data","setData","React","anchorEl","setAnchorEl","setOrder","setOrderBy","open","Boolean","mounted","useRef","data","_solo","solo","rToC","sorting","nameToFile","addRow","some","alg","handleClose","menuManageRow","filter","filtRow","err","current","component","Paper","square","aria-label","aria-controls","aria-haspopup","currentTarget","title","arrow","placement","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","option","alignItems","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","row","interactive","scope","runtime"],"mappings":"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","file":"static/js/20.6c87d121.chunk.js","sourcesContent":["var map = {\n\t\"./array\": 56,\n\t\"./array.json\": 56,\n\t\"./avl\": 62,\n\t\"./avl.json\": 62,\n\t\"./b-tree\": 63,\n\t\"./b-tree.json\": 63,\n\t\"./binary-insertion\": 54,\n\t\"./binary-insertion.json\": 54,\n\t\"./binary-search\": 49,\n\t\"./binary-search.json\": 49,\n\t\"./bst\": 61,\n\t\"./bst.json\": 61,\n\t\"./bubble-sort\": 51,\n\t\"./bubble-sort.json\": 51,\n\t\"./dfs\": 55,\n\t\"./dfs.json\": 55,\n\t\"./doubly-linked-list\": 59,\n\t\"./doubly-linked-list.json\": 59,\n\t\"./hash-table\": 64,\n\t\"./hash-table.json\": 64,\n\t\"./heap\": 65,\n\t\"./heap-sort\": 53,\n\t\"./heap-sort.json\": 53,\n\t\"./heap.json\": 65,\n\t\"./insertion-sort\": 47,\n\t\"./insertion-sort.json\": 47,\n\t\"./linked-list\": 58,\n\t\"./linked-list.json\": 58,\n\t\"./merge-sort\": 48,\n\t\"./merge-sort.json\": 48,\n\t\"./quick-sort\": 52,\n\t\"./quick-sort.json\": 52,\n\t\"./selection-sort\": 50,\n\t\"./selection-sort.json\": 50,\n\t\"./sorted-array\": 57,\n\t\"./sorted-array.json\": 57,\n\t\"./stack\": 60,\n\t\"./stack.json\": 60\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 145;\nmodule.exports = webpackAsyncContext;","import React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableSortLabel, Paper, Tooltip, Menu, MenuItem, IconButton } from '@material-ui/core';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n    },\r\n    code: {\r\n        fontSize: \"calc(3px + 1vw)\",\r\n        display: \"inline-block!important\",\r\n        boxSizing: \"border-box!important\",\r\n        wordBreak: \"break-all\",\r\n    },\r\n    tooltip: {\r\n        position: 'relative',\r\n    },\r\n    text: {\r\n        display: 'table',\r\n        wordBreak: \"break-all\",\r\n        '&:hover': {\r\n            color: '#eeeeee',\r\n            backgroundColor: 'rgba(00, 00, 00, 0.6)',\r\n            boxShadow: \"0 0 10px 3px rgba(11, 11, 11, 0.6)\",\r\n        },\r\n        cursor: 'pointer',\r\n    },\r\n    active: {\r\n        color: '#eeeeee',\r\n        backgroundColor: 'rgba(00, 00, 00, 0.6)',\r\n        boxShadow: \"0 0 10px 3px rgba(11, 11, 11, 0.6)\",\r\n    },\r\n    table: {\r\n        marginTop: '5px',\r\n        marginBottom: '5px',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        width: '60%',\r\n        minWidth: '750px',\r\n        //backgroundColor: 'rgba(00, 00, 00, 0)',\r\n    },\r\n    tableNoBorderRight: {\r\n        backgroundColor: 'rgba(00, 00, 00, 0.2)',\r\n        fontWeight: '500',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        paddingRight: '2px',\r\n    },\r\n    tableNoBorderLeft: {\r\n        backgroundColor: 'rgba(00, 00, 00, 0.2)',\r\n        fontWeight: '500',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n        paddingLeft: '2px',\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    icon: {\r\n        padding: '0px',\r\n    },\r\n    dropDownArrow: {\r\n        padding: '0px',\r\n        marginLeft: '0px',\r\n        marginRight: '0px',\r\n        verticalAlign: 'middle',\r\n    },\r\n    zero: {\r\n        backgroundColor: 'rgba(00, 00, 00, 0.2)',\r\n        fontWeight: '500',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n    },\r\n    one: {\r\n        backgroundColor: 'rgba(00, 150, 00, 0.6)',\r\n        color: '#004000',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n    },\r\n    two: {\r\n        backgroundColor: 'rgba(130, 240, 10, 0.6)',\r\n        color: '#004000',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n    },\r\n    three: {\r\n        backgroundColor: 'rgba(255,255,10, 0.6)',\r\n        color: '#804000',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n    },\r\n    four: {\r\n        backgroundColor: 'rgba(255,100,0, 0.6)',\r\n        color: '#804000',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n    },\r\n    five: {\r\n        backgroundColor: 'rgba(215,0,0, 0.6)',\r\n        color: '#800000',\r\n        borderTop: '2px solid rgba(255, 255, 255, 1)',\r\n        borderBottom: '2px solid rgba(255, 255, 255, 1)',\r\n        borderLeft: '2px solid rgba(255, 255, 255, 1)',\r\n        borderRight: '2px solid rgba(255, 255, 255, 1)',\r\n    }\r\n}));\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (orderBy === \"strawberry\") return 0;\r\n    var substring = orderBy.substring(0, orderBy.length - 5);\r\n    if (b[substring].rank < a[substring].rank) {\r\n        return -1;\r\n    }\r\n    if (b[substring].rank > a[substring].rank) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction createDataObject(name, desc, rc_avg_search, rc_avg_ins, rc_avg_del, rc_worst_search, rc_worst_ins, rc_worst_del) {\r\n    return { name, desc, rc_avg_search, rc_avg_ins, rc_avg_del, rc_worst_search, rc_worst_ins, rc_worst_del };\r\n}\r\n\r\nconst createData = (query) => {\r\n    return createDataObject(query.name,\r\n        query.desc,\r\n        query.runtimeComplexity.average.search,\r\n        query.runtimeComplexity.average.insertion,\r\n        query.runtimeComplexity.average.deletion,\r\n        query.runtimeComplexity.worst.search,\r\n        query.runtimeComplexity.worst.insertion,\r\n        query.runtimeComplexity.worst.deletion);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: true, label: '', dependent: true },\r\n    { id: 'rc_avg_search.rank', numeric: true, disablePadding: false, label: 'Search' },\r\n    { id: 'rc_avg_ins.rank', numeric: true, disablePadding: false, label: 'Insertion' },\r\n    { id: 'rc_avg_del.rank', numeric: true, disablePadding: false, label: 'Deletion' },\r\n    { id: 'rc_worst_search.rank', numeric: true, disablePadding: false, label: 'Search' },\r\n    { id: 'rc_worst_ins.rank', numeric: true, disablePadding: false, label: 'Insertion' },\r\n    { id: 'rc_worst_del.rank', numeric: true, disablePadding: false, label: 'Deletion' },\r\n    // { id: 'stable', numeric: true, disablePadding: false, label: 'Stability' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, onRequestSort, titleType } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n    function getTitle(dependent, str) {\r\n        if (dependent) {\r\n            return titleType.concat(' ', str);\r\n        } else {\r\n            return str;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TableHead>\r\n        <TableRow>\r\n            {headCells.map((headCell) => (\r\n            <TableCell\r\n                key={headCell.id}\r\n                align={headCell.disablePadding ? 'left' : 'center'}\r\n                sortDirection={orderBy === headCell.id ? order : false}\r\n                className={classes.zero}\r\n            >\r\n                <TableSortLabel\r\n                    active\r\n                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                    onClick={createSortHandler(headCell.id)}\r\n                    IconComponent={ArrowDropDownIcon}\r\n                    classes={{ icon: classes.dropDownArrow }}\r\n                >\r\n                {getTitle(headCell.dependent, headCell.label)}\r\n                {orderBy === headCell.id ? (\r\n                    <span className={classes.visuallyHidden}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                    </span>\r\n                ) : null}\r\n                </TableSortLabel>\r\n            </TableCell>\r\n            ))}\r\n        </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nfunction DSRuntimeModule(unit) {\r\n    const classes = useStyles();\r\n    const [_data, setData] = useState([]);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('strawberry');\r\n    const open = Boolean(anchorEl);\r\n    const mounted = useRef(false);\r\n    const data = unit.unit;\r\n    const _id = unit.id;\r\n    const _solo = unit.solo;\r\n    const rToC = [ //rankToColour\r\n        classes.zero, // not used for runtime, outer cells only\r\n        classes.one, // constant\r\n        classes.two, // logn\r\n        classes.three, // n\r\n        classes.four, // n log n\r\n        classes.five, // n^2\r\n    ];\r\n    const sorting = [\r\n        \"Array\",\r\n        \"Sorted Array\",\r\n        \"Linked List\",\r\n        \"Doubly-Linked List\",\r\n        \"Stack\",\r\n        \"Binary Search Tree\",\r\n        \"AVL Tree\",\r\n        \"Hash Table\",\r\n        \"B-Tree\",\r\n        \"Heap\",\r\n        \"Disjoint Set\",\r\n    ];\r\n    const nameToFile = {\r\n        \"Array\" : \"array\",\r\n        \"Sorted Array\" : \"sorted-array\",\r\n        \"Linked List\" : \"linked-list\",\r\n        \"Doubly-Linked List\" : \"doubly-linked-list\",\r\n        \"Stack\" : \"stack\",\r\n        \"Binary Search Tree\" : \"bst\",\r\n        \"AVL Tree\" : \"avl\",\r\n        \"Hash Table\" : \"hash-table\",\r\n        \"B-Tree\" : \"b-tree\",\r\n        \"Heap\" : \"heap\",\r\n        \"Disjoint Set\" : \"disjoint\",\r\n    };\r\n\r\n    // add row to table\r\n    const addRow = (query, solo) => {\r\n        if (solo) {\r\n            if (!(_data.some(e => e.name === query.name))) { // if the requested element doesn't already exist in the list\r\n                setData(_data => [..._data, createData(query)]);\r\n            }\r\n        } else if (!solo) {\r\n            query.map( alg => setData(_data => [..._data, createData(alg)]));\r\n        }\r\n    }\r\n\r\n    // delete row from table through lookup (keep rows that are not the target)\r\n    const filtRow = (name) => {\r\n        setData(_data.filter(query => query.name !== name));\r\n    }\r\n    // end section\r\n\r\n    // click handler for column sorting mechanism\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n    // end section\r\n\r\n    // click handler for add/delete menu\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    // callback for dynamic loading of row from add/delete menu\r\n    const menuManageRow = (name) => {\r\n        if (!(_data.some(e => e.name === name))) { // if the requested element doesn't already exist in the list\r\n            try {\r\n                import('../Module/algorithms/json/'.concat(nameToFile[name])).then(query => {\r\n                    addRow(query, true);\r\n            })\r\n            } catch(err) {}\r\n        } else {\r\n            filtRow(name);\r\n        }\r\n        handleClose();\r\n    }\r\n    // end section\r\n\r\n    // return title based on input data type\r\n    const returnTitle = () => {\r\n        return ('Data Structures');\r\n    }\r\n\r\n    // map input data to legible text\r\n    const returnMap = () => {\r\n        return sorting.map((option) => (\r\n            <MenuItem key={option} onClick={() => menuManageRow(option)} alignItems={'center'}>\r\n                {option}\r\n            </MenuItem>\r\n        ))\r\n    }\r\n    //end section\r\n\r\n    // initialize table\r\n    if (!mounted.current) {\r\n        addRow(data, _solo);\r\n        mounted.current = true;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer component={Paper} className={classes.table} square>\r\n            <Table aria-label=\"table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\" className={classes.zero}>\r\n                            <IconButton\r\n                                aria-label=\"more\"\r\n                                aria-controls=\"long-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleClick}\r\n                                className={classes.icon}\r\n                            >\r\n                            <Tooltip title={\"Add or remove items from the table with this button!\"} arrow placement={'top'}>\r\n                                <MoreHorizIcon />\r\n                            </Tooltip>\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"long-menu\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'center',\r\n                                }} //doesn't work\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'center',\r\n                                }}\r\n                                keepMounted\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                PaperProps={{\r\n                                style: {\r\n                                    maxHeight: ITEM_HEIGHT * 4.5,\r\n                                    width: '24ch',\r\n                                    },\r\n                                }}\r\n                            >\r\n                                {returnMap()}\r\n                            </Menu>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableNoBorderRight}>Runtime</TableCell>\r\n                        <TableCell align=\"left\" className={classes.tableNoBorderLeft}>Complexity</TableCell>\r\n                        <TableCell align=\"center\" className={classes.zero}>Runtime Complexity</TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableNoBorderRight}>Runtime</TableCell>\r\n                        <TableCell align=\"left\" className={classes.tableNoBorderLeft}>Complexity</TableCell>\r\n                        <TableCell align=\"center\" className={classes.zero}>Runtime Complexity</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <EnhancedTableHead\r\n                    classes={classes}\r\n                    order={order}\r\n                    orderBy={orderBy}\r\n                    onRequestSort={handleRequestSort}\r\n                    titleType={returnTitle()}\r\n                />\r\n                <TableBody>\r\n                    {stableSort(_data, getComparator(order, orderBy)).map( row => (\r\n                        <TableRow key={row.name}>\r\n                            <Tooltip title={row.desc} interactive arrow placement={'right'}>\r\n                                <TableCell component=\"th\" scope=\"row\" className={classes.zero}>\r\n                                    {row.name}\r\n                                </TableCell>\r\n                            </Tooltip>\r\n                            <Tooltip title={row.rc_avg_search.desc} interactive arrow>\r\n                                <TableCell align=\"center\" className={rToC[row.rc_avg_search.rank]}>{row.rc_avg_search.runtime}</TableCell>\r\n                            </Tooltip>\r\n                            <Tooltip title={row.rc_avg_ins.desc} interactive arrow>\r\n                                <TableCell align=\"center\" className={rToC[row.rc_avg_ins.rank]}>{row.rc_avg_ins.runtime}</TableCell>\r\n                            </Tooltip>\r\n                            <Tooltip title={row.rc_avg_del.desc} interactive arrow>\r\n                                <TableCell align=\"center\" className={rToC[row.rc_avg_del.rank]}>{row.rc_avg_del.runtime}</TableCell>\r\n                            </Tooltip>\r\n                            <Tooltip title={row.rc_worst_search.desc} interactive arrow>\r\n                                <TableCell align=\"center\" className={rToC[row.rc_worst_search.rank]}>{row.rc_worst_search.runtime}</TableCell>\r\n                            </Tooltip>\r\n                            <Tooltip title={row.rc_worst_ins.desc} interactive arrow>\r\n                                <TableCell align=\"center\" className={rToC[row.rc_worst_ins.rank]}>{row.rc_worst_ins.runtime}</TableCell>\r\n                            </Tooltip>\r\n                            <Tooltip title={row.rc_worst_del.desc} interactive arrow>\r\n                                <TableCell align=\"center\" className={rToC[row.rc_worst_del.rank]}>{row.rc_worst_del.runtime}</TableCell>\r\n                            </Tooltip>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DSRuntimeModule;"],"sourceRoot":""}