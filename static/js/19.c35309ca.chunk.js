(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[19],{156:function(e,t,n){"use strict";n.r(t);var a=n(0),i=n.n(a),r=n(55),c=n(101),o=n(2),s=n(1),l=(n(4),n(3)),d=n(5),g=[0,1,2,3,4,5,6,7,8,9,10],m=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12];function x(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=parseFloat(e);return"".concat(n/t).concat(String(e).replace(String(n),"")||"px")}var u=i.a.forwardRef((function(e,t){var n=e.alignContent,a=void 0===n?"stretch":n,r=e.alignItems,c=void 0===r?"stretch":r,d=e.classes,g=e.className,m=e.component,x=void 0===m?"div":m,u=e.container,p=void 0!==u&&u,f=e.direction,v=void 0===f?"row":f,w=e.item,h=void 0!==w&&w,b=e.justify,j=void 0===b?"flex-start":b,y=e.lg,S=void 0!==y&&y,C=e.md,E=void 0!==C&&C,W=e.sm,O=void 0!==W&&W,z=e.spacing,I=void 0===z?0:z,M=e.wrap,N=void 0===M?"wrap":M,k=e.xl,G=void 0!==k&&k,B=e.xs,D=void 0!==B&&B,R=e.zeroMinWidth,J=void 0!==R&&R,P=Object(o.a)(e,["alignContent","alignItems","classes","className","component","container","direction","item","justify","lg","md","sm","spacing","wrap","xl","xs","zeroMinWidth"]),q=Object(l.a)(d.root,g,p&&[d.container,0!==I&&d["spacing-xs-".concat(String(I))]],h&&d.item,J&&d.zeroMinWidth,"row"!==v&&d["direction-xs-".concat(String(v))],"wrap"!==N&&d["wrap-xs-".concat(String(N))],"stretch"!==c&&d["align-items-xs-".concat(String(c))],"stretch"!==a&&d["align-content-xs-".concat(String(a))],"flex-start"!==j&&d["justify-xs-".concat(String(j))],!1!==D&&d["grid-xs-".concat(String(D))],!1!==O&&d["grid-sm-".concat(String(O))],!1!==E&&d["grid-md-".concat(String(E))],!1!==S&&d["grid-lg-".concat(String(S))],!1!==G&&d["grid-xl-".concat(String(G))]);return i.a.createElement(x,Object(s.a)({className:q,ref:t},P))})),p=Object(d.a)((function(e){return Object(s.a)({root:{},container:{boxSizing:"border-box",display:"flex",flexWrap:"wrap",width:"100%"},item:{boxSizing:"border-box",margin:"0"},zeroMinWidth:{minWidth:0},"direction-xs-column":{flexDirection:"column"},"direction-xs-column-reverse":{flexDirection:"column-reverse"},"direction-xs-row-reverse":{flexDirection:"row-reverse"},"wrap-xs-nowrap":{flexWrap:"nowrap"},"wrap-xs-wrap-reverse":{flexWrap:"wrap-reverse"},"align-items-xs-center":{alignItems:"center"},"align-items-xs-flex-start":{alignItems:"flex-start"},"align-items-xs-flex-end":{alignItems:"flex-end"},"align-items-xs-baseline":{alignItems:"baseline"},"align-content-xs-center":{alignContent:"center"},"align-content-xs-flex-start":{alignContent:"flex-start"},"align-content-xs-flex-end":{alignContent:"flex-end"},"align-content-xs-space-between":{alignContent:"space-between"},"align-content-xs-space-around":{alignContent:"space-around"},"justify-xs-center":{justifyContent:"center"},"justify-xs-flex-end":{justifyContent:"flex-end"},"justify-xs-space-between":{justifyContent:"space-between"},"justify-xs-space-around":{justifyContent:"space-around"},"justify-xs-space-evenly":{justifyContent:"space-evenly"}},function(e,t){var n={};return g.forEach((function(a){var i=e.spacing(a);0!==i&&(n["spacing-".concat(t,"-").concat(a)]={margin:"-".concat(x(i,2)),width:"calc(100% + ".concat(x(i),")"),"& > $item":{padding:x(i,2)}})})),n}(e,"xs"),{},e.breakpoints.keys.reduce((function(t,n){return function(e,t,n){var a={};m.forEach((function(e){var t="grid-".concat(n,"-").concat(e);if(!0!==e)if("auto"!==e){var i="".concat(Math.round(e/12*1e8)/1e6,"%");a[t]={flexBasis:i,flexGrow:0,maxWidth:i}}else a[t]={flexBasis:"auto",flexGrow:0,maxWidth:"none"};else a[t]={flexBasis:0,flexGrow:1,maxWidth:"100%"}})),"xs"===n?Object(s.a)(e,a):e[t.breakpoints.up(n)]=a}(t,e,n),t}),{}))}),{name:"MuiGrid"})(u),f=Object(a.lazy)((function(){return Promise.all([n.e(0),n.e(15),n.e(16)]).then(n.bind(null,157))})),v=Object(a.lazy)((function(){return Promise.all([n.e(0),n.e(17)]).then(n.bind(null,154))})),w=Object(r.a)((function(e){return{root:{flexGrow:1},paper:{padding:e.spacing(1),maxWidth:"50vw"},container:{marginLeft:"10px",marginRight:"10px"}}})),h="https://raw.githubusercontent.com/Kaillus/algorithms-datastructures/master/public/Resources/CodeAnalysis/algorithms/merge.cpp";t.default=function(e){var t=w();return i.a.createElement("div",null,i.a.createElement("h1",null,"Merge Sort is a divide-and-conquer algorithm"),i.a.createElement(c.a,{elevation:3,className:t.container},i.a.createElement(p,{container:!0,spacing:0,direction:"row",alignItems:"center"},i.a.createElement(p,{item:!0,xs:12,sm:6},i.a.createElement(c.a,{elevation:0,className:t.paper},i.a.createElement(f,{unit:h,id:"merge"}))),i.a.createElement(p,{item:!0,xs:12,sm:6},i.a.createElement(c.a,{elevation:0,className:t.paper},i.a.createElement(v,{unit:h,id:"merge"}))))))}}}]);
//# sourceMappingURL=19.c35309ca.chunk.js.map